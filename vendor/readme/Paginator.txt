https://github.com/jasongrimes/php-paginator - тут плагин пагинации. Все на английском но если пропускать через гугл переводчик то 
переведет норм все. 

установка производится через composer командой которая описана в ссылке выше. Как обычно в каркас mvc подключается autoload.php который
подключает все библиотеки загруженные через composer в какую то одну папку.

для того чтобы пользоваться классом библиотеки необходимо в файле, в котором будет использоваться библиотека, прописать пространство имен:
use JasonGrimes\Paginator as pages;
далее я могу обращаться к классу через алиас: pages.

пример с гитхаба:

use JasonGrimes\Paginator;

$totalItems = 1000;// общее количество строк
$itemsPerPage = 50;// сколько строк должно быть на одной странице
$currentPage = 8; // текущая страница
$urlPattern = '/foo/page/(:num)'; // это шаблон для формируемых ссылок (страниц). :num - номера, будут идти по порядку 1,2,3,4... независимо ни от чего.
				  // главное прописать данные шаблон в конфиге config_route.php чтобы при нажатии на ссылку не было 404 ошибки.

$paginator = new Paginator($totalItems, $itemsPerPage, $currentPage, $urlPattern); // далее создается объект класса и объект $paginator просто через например
										   // echo выводится в представлении. Там уже будут все ссылки (страницы)

Но чаще всего мне придется такого рода данные выводить из БАЗЫ ДАННЫХ, поэтому я сформировал свой пример. База данных состоит из следующих элементов:

test
________
| name |
--------
|   1  |
--------
|   2  |
--------
|   3  |
--------
|   4  |
--------
|   5  |
--------
|   6  |
и так далее до 9.

весь код представлен в МОДЕЛИ:

<?php
use JasonGrimes\Paginator as pages;
class model_site_index extends model 
{
	public function __construct()
	{
		parent::__construct();		
	}

	public function test($current)// сюда приходит номер нажатой страницы
	{
		$totalItems = $this->db->select('COUNT(*)')->from('test')->start()['data'][0][0];//количество строк в таблице (общее)		
		$itemsPerPage = 3;//сколько строк выводить на одну страницу
		$currentPage = $current;//текущая страница
		$urlPattern = '/test/(:num)';			

		$elements = $this->db->select('name')->from('test')->limit(($current-1)*$itemsPerPage, $itemsPerPage)->start()['data'];		

		$paginator = new pages($totalItems, $itemsPerPage, $currentPage, $urlPattern);
		return ['paginator'=>$paginator,'elements'=>$elements];
	}	
}
$totalItems - сюда обычным образом попадет количество строк в таблице
$itemsPerPage - тут вручную указываем сколько строк из бд будет на одной странице
$currentPage - этот параметр нужен только для того, чтобы конкретной текущей странице присвоить класс active, чтобы наложить на него стили.
$urlPattern = '/test/(:num)'; - а это шаблон по которому будут формироваться ссылки. (:num) будет заменен на числа 1, 2, 3 и по порядку так далее.
т.е. ссылки пагинации будут иметь вид: /test/1, /test/2 и так далее.

$elements = $this->db->select('name')->from('test')->limit(($current-1)*$itemsPerPage, $itemsPerPage)->start()['data'];
самая пожалуй сложная строка. Выводит элементы из базы данных при помощи sql оператора limit. 
в целом исходный запрос выглядит так: SELECT name FROM test LIMIT 0,3;
После limit первое число означает с какого элемента будет вывод (в данном случае нулевой элмент это первая строка в таблице - отчет идет от нуля как у массивов)
и второе число это НЕ КОНЕЧНАЯ СТРОКА, а СКОЛЬКО строк, начиная с первой нужно вывести из таблицы!

Поскольку ссылки пагинации начинаются с 1 а не с 0 то целесообразно в строке выше (где выводим данные) сразу прописать $current-1 а затем
умножить это число на переменную $itemsPerPage (количество строк вывводимых на одну страницу). если не умножать то вывод получится таким: 
1 страница выведет 1, 2 и 3 элементы из таблицы
2 страница выведет 2, 3 и 4 элементы из таблицы
3 страница выведет 4, 5 и 6 элементы из таблицы
и так далее.

Т.е. понятно, что нужно выводить по 3 элемента на страницу но вывод производится все равно неверно. Например страница 2 должна выводить
не 2, 3 и 4 элементы из таблицы, а 4, 5 и 6 элементы (то есть шаг должен быть - каждые 3 элемента). Именно поэтому $current нужно перемножать с $itemsPerPage - 
таким образом мы задаем шаг для вывода элементов

возможно следует получше изучиь библиотеку на гитхабе там есть дополнительные интересные методы. Например пагинация для мобильной версии и так далее.


